{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KAC1BC,EAD0B,KAc5C,OAEI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAOd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCHlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAMDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MAEXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAfhB,kBAkBZM,GAlBY,4CAAH,sDCFPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG/B,OACI,yBAAKc,UAAU,+BACR,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAKA,EAAL,OCFFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAY,IAAD,EACVd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAqBpC,OAdAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI3B,CAACpB,IAGIqB,EDhBuBK,CAAa1B,GAA/Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QACnB,OAEI,oCACI,gCAAMpB,EAAN,KACCoB,GAAW,sCACZ,yBAAKJ,UAAU,cAGHH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACND,UEhBvBkB,EAAe,WAAK,IAAD,EACQ1C,mBAAS,CAAC,cADlB,mBACrB2C,EADqB,KACT5C,EADS,KAY5B,OAEI,oCACQ,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA2B,IAAM3B,EACNA,SAAUA,UCzB5B8B,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OAAO,kBAAC,EAAD,MAAiBJ,I","file":"static/js/main.165e7f2e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue,setInputValue] = useState('')\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n        \r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats=>[inputValue,...cats])\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired      \r\n}","\r\n\r\n\r\nexport const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=MBxTperYyq6FFsv086eFtGThPHGccElI`\r\n    const resp = await fetch( url );\r\n    /* Desestructuramos la peticion */\r\n    const {data} = await resp.json();\r\n\r\n\r\n    /* RECORRE TODO EL OBJETO Y ME DEVUELVE \r\n    TODAS LAS PROPIEDADES QUE YO LE ESTOY \r\n    INDICANDO */\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            //Le ponemos el ? para preguntar si existe lo busque \r\n            url: img.images?.downsized.url\r\n        }\r\n    })\r\n    return gifs; \r\n      \r\n}","import React from 'react'\r\nexport const GifGridItem = ({title,url}) => {\r\n   // console.log(title,url);\r\n    \r\n    return (\r\n        <div className='card animate__fadeInDownBig'>\r\n               <img src={url} alt={title}></img>\r\n               <p> {title} </p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from '../components/GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    return (\r\n\r\n        <>\r\n            <h3> {category} </h3>\r\n            {loading && <p>loading</p>}\r\n            <div className='card-grid '>\r\n            \r\n                    {\r\n                        images.map(img =>(\r\n                            <GifGridItem \r\n                                key={ img.id }\r\n                                {...img}\r\n                             />\r\n                        ))\r\n                    }\r\n                \r\n\r\n            </div>\r\n\r\n        </>\r\n        \r\n     )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n\r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })\r\n\r\n            })\r\n    },[category])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=>{\r\n    const [categories, setCategories] = useState(['elon musk'])\r\n    //let addcat;\r\n    /* \r\n    ***PRUEBA 1 IMPRIMIR EN REACT\r\n    const handleAdd = ()=>{\r\n        \r\n-----con el operador spred... mantenemos los elementos del array y le aÃ±adimos los otro\r\n        let agregar = 'hola mundo'\r\n        setCategories(cats=>[agregar,...categories])\r\n    } */\r\n    \r\n    return (\r\n        \r\n        <>\r\n                <h1>GifExpertApp </h1>\r\n                <AddCategory setCategories={setCategories} />\r\n                <hr/>\r\n                \r\n               {/* PRUEBA 1 IMPRIMIR EN REACT  <button onClick={handleAdd}>Agregar </button> */}\r\n                <ol>        \r\n                    {\r\n                    categories.map(category =>(\r\n                        <GifGrid    \r\n                        key={ category }\r\n                        category={category}\r\n                        />\r\n                    ))\r\n                    }\r\n\r\n                </ol>\r\n             </>\r\n\r\n\r\n\r\n\r\n        )\r\n    }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport './index.css';\nconst divRoot = document.querySelector('#root')\nReactDOM.render(<GifExpertApp />,divRoot);\n\n"],"sourceRoot":""}